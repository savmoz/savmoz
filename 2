
 if(Separators_On &&07 Period()<= __Separators_Max_TF)
    {
    CurrentSeparators("Today", Separators_Color, Separators_Style_01234,
    Separators_Width_01);
    CurrentSeparators("Tomorrow", Separators_Color,Separators_Style_01234,
    Separators_Width_12345);
    //Separators for prior sessions
    if(__Prior_Days_To_Show > 0)
      {
      //Calculate bars per session
      if(Levels_On && Period()<= __Levels_Whole_Max_TF)
    {
    if(Period()>240 && Levels_Display_Number== 2) {Levels_Display_Number= 3;}
    //define needed variables
    ssp1= int (Bid/Poin);  //bid w/o the decimal
    v1=ssp1%100; //last two significant digits
    BL=v1; //last two significant digits of starting/reference bid line

    //calculate line levels bottom to top
    for(j= int (-100-(100-BL)-(100*NumberOfRanges)); j<= int ((100-BL)+(100*NumberOfRanges)); j++)
      {
        //Separators for prior sessions
    if(__Prior_Days_To_Show > 0)
      ssp=ssp1+j;
      v1=ssp%100;
           if (Period()==1) {bps = 150;}
      else {if (Period()==5) {bps = 30;}
      else {if (Period()==15){bps =12;}
      else {if (Period()==30){bps = 8;}
      else {if (Period()==60){bps = 4;}
      else {if (Period()==240){bps = 12;}
      else {if (Period()==240){bps = 6;} }}}}}
      //Define bar starting prior sessions display
      shift = iBarShift(NULL,NULL,iTime(NULL,PERIOD_D1,0));
      //Execute loop for bars per session X number of prior sessions to show
      for(i= int (shift); i<=(shift+(bps*(__Prior_Days_To_Show))); i++)
        {
        if(TimeHour(Time[i]) == 0 && TimeMinute(Time[i]) == 0)
          {
          PriorSeparators(i, Separators_Color,
          Separators_Style_01234, Separators_Width_12345);
          CurrentSeparators("Tomorrow", Separators_Color, Separators_Style_01234,
    Separators_Width_12345);
          }
        }
      }
    }//End Separators
